# syntax=docker/dockerfile:1
ARG GO_VERSION=1.22-bookworm
ARG OS_VERSION=bookworm-slim

# if git4lab8 did releases with artefacts this build would not be necessary here
FROM golang:${GO_VERSION} as build
RUN    apt update -y \
    && apt install -y ca-certificates \
    && apt install -y git gcc build-essential
RUN go install github.com/goreleaser/goreleaser@latest
WORKDIR /app
COPY . ./
RUN go mod download
COPY .goreleaser.yml ./
RUN goreleaser build --id linux --snapshot --clean

FROM debian:${OS_VERSION}
RUN apt update -y && apt upgrade -y \
    && apt install -y ca-certificates curl

RUN mkdir -p /app/config
COPY config/application.yaml /app/config/application.yaml
WORKDIR /app

COPY --from=build /app/dist/downloader-linux-amd64 /usr/bin/downloader

RUN addgroup --gid 1002 downloader && \
    adduser --uid 1002 --ingroup downloader --home /home/downloader --shell /bin/bash --disabled-password --gecos "" downloader
RUN chown -R downloader:downloader /app
RUN mkdir -p /var/local/download && chown -R downloader:downloader /var/local/download
RUN mkdir -p /var/local/storage && chown -R downloader:downloader /var/local/storage

USER downloader

ENTRYPOINT ["/usr/bin/downloader"]
CMD [ "start", "-p", "8080" ]
